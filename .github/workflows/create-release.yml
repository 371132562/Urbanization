# 这个工作流文件的作用是：当代码被推送到 master 分支时，
# 自动将客户端所需的文件打包成 zip，并创建一个 GitHub Release。

name: 创建客户端发布包

on:
  push:
    branches:
      - master

# 授予工作流写权限，以便它可以创建 Release
permissions:
  contents: write

jobs:
  build-and-release:
    name: 构建并发布
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          # 获取所有历史记录，以便能创建正确的变更日志（如果需要）
          fetch-depth: 0

      - name: 打包发布文件
        run: |
          zip urbanization.zip start-app.bat backup-data.bat restore-data.bat 使用说明.txt docker-compose.yml
        
      - name: 创建 GitHub Release
        # 使用一个非常流行的第三方 Action 来简化 Release 的创建过程
        uses: softprops/action-gh-release@v2
        with:
          # 使用 GitHub Action 的运行编号作为版本号，确保每次都唯一且递增
          tag_name: release-v${{ github.run_number }}
          name: "客户端部署包 v${{ github.run_number }}"
          body: |
            自动打包的客户端部署文件。
            
            本次发布包含了最新的：
            - 使用说明文档 (`使用说明.txt`)
            - 一键启动脚本 (`start-app.bat`)
            - 数据备份脚本 (`backup-data.bat`)
            - 数据恢复脚本 (`restore-data.bat`)
            - Docker Compose 配置文件 (`docker-compose.yml`)

            请下载下面的 `urbanization.zip` 文件。
          files: urbanization.zip 